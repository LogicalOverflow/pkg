name: Linux Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Format files
        run: find include src test -type f -not -name "doctest.h" -a \( -name "*.cc" -o -name "*.h" \) -print0 | xargs -0 clang-format-9 -i

      - name: Check for differences
        run: |
          git status --porcelain
          git status --porcelain | xargs -I {} -0 test -z \"{}\"
  build:
    runs-on: ubuntu-latest
    container:
      image: motisproject/cpp-build:latest
    strategy:
      matrix:
        cxx: [gcc-7, clang-9, clang-9-san]
        mode: [Debug, Release]
        lint: [Off, On]
        exclude:
          - mode: Release
            cxx: clang-9-san
          - mode: Release
            lint: On
          - cxx: gcc-7
            lint: On
          - cxx: clang-9-san
            lint: On
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_NOHASHDIR: true
      UBSAN_OPTIONS: halt_on_error=1:abort_on_error=1
    steps:
      - uses: actions/checkout@v2

      - name: ccache Cache
        uses: actions/cache@v1.1.2
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ matrix.cxx }}-${{ matrix.mode }}-${{ hashFiles('**/*.h') }}-${{ hashFiles('**/*.cc') }}

      - name: Dependencies Cache
        uses: actions/cache@v1.1.2
        with:
          path: ${{ github.workspace }}/deps
          key: deps-${{ hashFiles('.pkg') }}

      - name: CMake
        run: |
          cmake-ccache-${{ matrix.cxx }} \
            -G Ninja -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.mode }}

      - name: Build
        run: |
          ccache -z
          cmake --build build --target pkg pkg-test
          ccache -s

      - name: Run Tests
        run: ./build/pkg-test

      # ==== DISTRIBUTION ====
      - name: Strip Executable
        if: matrix.mode == 'Release' && matrix.cxx == 'gcc-7'
        run: strip build/pkg
      - name: Upload Distribution
        if: matrix.mode == 'Release' && matrix.cxx == 'gcc-7'
        uses: actions/upload-artifact@v1
        with:
          name: pkg-linux
          path: ./build/pkg

      # ==== RELEASE ====
      - name: Upload Release
        if: github.event.action == 'published' && matrix.mode == 'Release' && matrix.cxx == 'gcc-7'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/pkg
          asset_name: pkg
          asset_content_type: application/x-tar